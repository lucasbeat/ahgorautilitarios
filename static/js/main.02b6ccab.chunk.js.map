{"version":3,"sources":["helper/calculator.js","helper/utils.js","components/DailyTimeline.js","components/DaysInfo.js","components/TimelineParser.js","components/Nightly.js","components/hourCalculatorStyles.js","components/HourCalculator.js","pages/hoursConverter/style.js","pages/hoursConverter/index.js","pages/multiplyingFactor/style.js","pages/multiplyingFactor/index.js","pages/hoursCalculator/styles.js","pages/hoursCalculator/index.js","pages/mainPage/index.js","styles/global.js","App.js","reportWebVitals.js","index.js"],"names":["hourToSeconds","hour","minutesToSeconds","minutes","removeUnderline","string","replaceAll","extractHoursFromSeconds","seconds","Math","floor","extractMinutesFromSeconds","getNightlyFactor","moment","locale","convertDate","date","format","getWeeklyDay","weeklyDay","slice","toLocaleUpperCase","length","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","rand","round","random","getModalStyle","top","left","transform","periodTypesTranslator","shift","nightly","punch","leave","tolerance","intinere","onCalls","businesshour","BlockLabel","styled","label","PeriodWrapper","div","DailyTimeline","timeline","classes","useState","modalStyle","open","setOpen","id","className","startInfo","endInfo","title","options","DESC_TIPO_HORA","type","map","join","includes","Modal","onClose","aria-labelledby","aria-describedby","style","motivo","tratamento","tratamento_noturno","nao_abonar_falta","apenas_abonar_ausencia","force_shift_limits","LIMITES_HORAS_ADICIONAIS","HORA_ADICIONAL_ORIGEM","TM_QUANTIDADE","HORA_ADICIONAL_DESTINO","Button","marginTop","variant","color","onClick","Card","CardHeader","CardInfo","CardPeriods","DayInfo","day","shiftIndex","jornada","shiftData","shifts","contractualHour","ops","HORAS_CONTRATUAIS","dia","events","isHoliday","range","marginBottom","punchesInTolerance","hora","index","ContainerJson","ContainerTimeLine","ContainerDays","Timeline","setTimeline","Object","keys","onChange","e","value","target","JSON","parse","marginLeft","fontSize","rows","cols","placeholder","display","period","blocked","groupOfRules","daysInfos","Container","ContainerRow","TextAreaNoResize","textarea","Label","Input","input","NightlyFactor","nightlyTime","setTime","calc","result","remove","handleOnChangeValue","name","isNaN","hours","readOnly","toString","padStart","marginRight","InputHour","InputHourResult","ContainerHour","Calculator","handleTime","timeState","doCalc","setOperation","setAutoSave","handleOnChange","handleOnclick","event","hour1","for","minute1","hour2","minute2","readonly","maxlength","checked","class","HoursConverter","sexagesimal","setSexagesimal","centesimal","setCentesimal","handleChangeSexagesimal","time","split","converterToCentesimal","handleChangeCentesimal","converterToSexagesimal","mask","MultiplyingFactor","bancoDeHoras","setBancoDeHoras","fator","setFator","setResult","totalSeconds","parseInt","hoursToSeconds","hoursAndMinutes","factorMinutes","HoursCalculator","inputs","setInputs","obj","setObj","hoursInputRef","useRef","Array","minutesInputRef","operation","current","elem","reducer","acc","allHours","reduce","allMinutes","sumHoursAndMinutes","decreaseHoursAndMinutes","TextField","inputRef","element","forEach","inputProps","root","flexGrow","IndexPage","setValue","autoSave","setNightlyTime","resultNightly","setResultNightly","chooseMethod","sumHours","sumMinutes","sum","decrease","reset","tabChooser","0","HourCalculator","resultOperation","1","Nightly","nightlyResult","minutesInSeconds","resultsWithFactor","calcNightlyFactor","resultRemoval","resultWithoutFactor","ceil","console","log","removeNightlyFactor","2","3","4","TimelineParser","5","Paper","zIndex","Tabs","newValue","indicatorColor","textColor","centered","Tab","paddingTop","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02b6ccab.chunk.js","sourcesContent":["const sumHoursAndMinutes = ({hours, minutes}) => {\r\n    const reducer = (acc, current) => acc + current;\r\n    const allHours = hourToSeconds(hours.reduce(reducer))\r\n    const allMinutes = minutesToSeconds(minutes.reduce(reducer))\r\n    \r\n    return {\r\n        hours: extractHoursFromSeconds(allHours + allMinutes),\r\n        minutes: extractMinutesFromSeconds(allHours + allMinutes),\r\n    };\r\n};\r\nconst decreaseHoursAndMinutes = ({hours, minutes}) => {\r\n    const reducer = (acc, current) => acc - current;\r\n    const allHours = hourToSeconds(hours.reduce(reducer))\r\n    const allMinutes = minutesToSeconds(minutes.reduce(reducer))\r\n\r\n    return {\r\n        hours: extractHoursFromSeconds(allHours + allMinutes),\r\n        minutes: extractMinutesFromSeconds(allHours + allMinutes),\r\n    };\r\n};\r\n\r\nconst sum = ({ hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0 }) => {\r\n    const sumHours = hourToSeconds(hour1) + hourToSeconds(hour2);\r\n    const sumMinutes = minutesToSeconds(minute1) + minutesToSeconds(minute2);\r\n    return {\r\n        hours: extractHoursFromSeconds(sumHours + sumMinutes),\r\n        minutes: extractMinutesFromSeconds(sumHours + sumMinutes),\r\n    };\r\n};\r\n\r\nconst decrease = ({ hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0 }) => {\r\n    const sumFirstLine = hourToSeconds(hour1) + minutesToSeconds(minute1);\r\n    const sumSecondLine = hourToSeconds(hour2) + minutesToSeconds(minute2);\r\n\r\n    const result = sumFirstLine - sumSecondLine;\r\n    return {\r\n        hours: extractHoursFromSeconds(result),\r\n        minutes: extractMinutesFromSeconds(result),\r\n    };\r\n};\r\n\r\nconst reset = (setTime) => {\r\n    setTime({});\r\n    return {};\r\n};\r\n\r\nconst calcNightlyFactor = ({ hours, minutes }) => {\r\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\r\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\r\n    if (!minutesInSeconds && !totalSeconds) return {};\r\n\r\n    const resultsWithFactor = totalSeconds * getNightlyFactor();\r\n\r\n    return {\r\n        hours: extractHoursFromSeconds(resultsWithFactor),\r\n        minutes: extractMinutesFromSeconds(resultsWithFactor),\r\n    };\r\n};\r\n\r\nconst removeNightlyFactor = ({ hours, minutes }) => {\r\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\r\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\r\n\r\n    if (!minutesInSeconds && !totalSeconds) return {};\r\n\r\n    const resultWithoutFactor = Math.ceil(totalSeconds / getNightlyFactor());\r\n    console.log(\"total\", totalSeconds);\r\n    console.log(\"result\", resultWithoutFactor);\r\n\r\n    return {\r\n        hours: extractHoursFromSeconds(resultWithoutFactor),\r\n        minutes: extractMinutesFromSeconds(resultWithoutFactor),\r\n    };\r\n};\r\n\r\nconst converterToCentesimal = (time) => {\r\n    if (!time) return false;\r\n    const [hours, minutes] = removeUnderline(time).split(\":\");\r\n    return `${hours}.${Math.floor(minutes * 1.67)}`;\r\n};\r\n\r\nconst converterToSexagesimal = (time) => {\r\n    if (!time) return false;\r\n    let [hours, minutes] = removeUnderline(time).split(\".\");\r\n    return `${hours}:${Math.round(minutes / 1.67)\r\n        .toString()\r\n        .padStart(2, 0)}`;\r\n};\r\n\r\nconst secondsToHoursAndMinutes = (totalSeconds) => {\r\n    return `${extractHoursFromSeconds(totalSeconds).toString().padStart(2, 0)}:${extractMinutesFromSeconds(totalSeconds).toString().padStart(2, 0)}`;\r\n};\r\n\r\nconst hourToSeconds = (hour) => hour * 3600;\r\n\r\nconst minutesToSeconds = (minutes) => minutes * 60;\r\n\r\nconst removeUnderline = (string) => string.replaceAll(\"_\", \"0\");\r\n\r\nconst extractHoursFromSeconds = (seconds) => Math.floor(seconds / 3600);\r\n\r\nconst extractMinutesFromSeconds = (seconds) => Math.floor((seconds % 3600) / 60);\r\n\r\nconst getNightlyFactor = () => 8 / 7;\r\n\r\nexport { sum, decrease, reset, extractHoursFromSeconds, extractMinutesFromSeconds, calcNightlyFactor, removeNightlyFactor, converterToCentesimal, converterToSexagesimal, secondsToHoursAndMinutes, removeUnderline, sumHoursAndMinutes, decreaseHoursAndMinutes };\r\n","import moment from \"moment\";\r\nimport \"moment/locale/pt-br\";\r\nmoment.locale(\"pt-br\");\r\nconst convertDate = (date, format) => moment(date).format(format);\r\n\r\nconst getWeeklyDay = (date) => {\r\n    const weeklyDay = moment(date).format(\"dddd\");\r\n    return `${weeklyDay.slice(0, 1).toLocaleUpperCase()}${weeklyDay.slice(1, weeklyDay.length)}`;\r\n};\r\n\r\nexport { convertDate, getWeeklyDay };\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { convertDate } from \"../helper/utils\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: \"2px solid #000\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst periodTypesTranslator = {\r\n    shift: \"Jornada\",\r\n    nightly: \"Noturno\",\r\n    punch: \"Batida\",\r\n    leave: \"Afastamento\",\r\n    tolerance: \"Tolerância\",\r\n    intinere: \"Intinere\",\r\n    onCalls: \"SobreAviso\",\r\n    businesshour: \"Expediente\",\r\n};\r\n\r\nconst BlockLabel = styled.label`\r\n    display: block;\r\n`;\r\n\r\nconst PeriodWrapper = styled.div`\r\n    #period {\r\n        padding-left: 20px;\r\n        .infos {\r\n            display: flex;\r\n            justify-content: space-between;\r\n\r\n            p {\r\n                color: black;\r\n                font-weight: 500;\r\n            }\r\n        }\r\n    }\r\n\r\n    #treatment {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-top: 10px;\r\n\r\n        label {\r\n            margin-top: 20px;\r\n            color: black;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DailyTimeline = ({ timeline }) => {\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <PeriodWrapper>\r\n            <div id=\"period\">\r\n                <div className=\"infos\">\r\n                    <label>Inicio: </label>\r\n                    <p> {convertDate(timeline.startInfo, \"DD/MM/YYYY HH:mm\")} </p>\r\n                </div>\r\n                <div className=\"infos\">\r\n                    <label>Fim: </label>\r\n                    <p> {convertDate(timeline.endInfo, \"DD/MM/YYYY HH:mm\")} </p>\r\n                </div>\r\n            </div>\r\n            <div id=\"treatment\">\r\n                <label title=\"Gerará essa hora adicional caso esse período seja de batida\"> Tratamento caso trabalhado</label>\r\n                <p> {timeline.options?.shift?.DESC_TIPO_HORA} </p>\r\n                <label>Tipo do período </label>\r\n                <p>{timeline.type.map((type) => periodTypesTranslator[type]).join(\", \")} </p>\r\n            </div>\r\n\r\n            {timeline.type.includes(\"leave\") && (\r\n                <>\r\n                    <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\r\n                        <div style={modalStyle} className={classes.paper}>\r\n                            <BlockLabel>Motivo Afastamento: {`${timeline.options.leave.motivo}`}</BlockLabel>\r\n                            <BlockLabel>Tratamento: {`${timeline.options.leave.tratamento}`}</BlockLabel>\r\n                            <BlockLabel>Tratamento Noturno: {`${timeline.options.leave.tratamento_noturno}`}</BlockLabel>\r\n                            <BlockLabel>Não abona: {`${timeline.options.leave.nao_abonar_falta}`}</BlockLabel>\r\n                            <BlockLabel>Abona apenas ausências: {`${timeline.options.leave.apenas_abonar_ausencia}`}</BlockLabel>\r\n                            <BlockLabel>Força o tratamento da jornada/escala: {`${timeline.options.leave.force_shift_limits}`}</BlockLabel>\r\n                            <BlockLabel>Possui limites: {`${timeline.options.leave?.LIMITES_HORAS_ADICIONAIS?.length > 0 || \"Não\"}`}</BlockLabel>\r\n                            {timeline.options.leave?.LIMITES_HORAS_ADICIONAIS?.length > 0 && (\r\n                                <>\r\n                                    <BlockLabel>Origem: {`${timeline.options.leave.LIMITES_HORAS_ADICIONAIS[0].HORA_ADICIONAL_ORIGEM}`}</BlockLabel>\r\n                                    <BlockLabel>Quantidade: {`${timeline.options.leave.LIMITES_HORAS_ADICIONAIS[0].TM_QUANTIDADE}`}</BlockLabel>\r\n                                    <BlockLabel>Destino: {`${timeline.options.leave.LIMITES_HORAS_ADICIONAIS[0].HORA_ADICIONAL_DESTINO}`}</BlockLabel>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </Modal>\r\n                    <Button style={{marginTop: 20}} variant=\"outlined\" color=\"primary\" onClick={handleOpen}>\r\n                        Ver dados Afastamento\r\n                    </Button>\r\n                </>\r\n            )}\r\n        </PeriodWrapper>\r\n    );\r\n};\r\n\r\nexport default DailyTimeline;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DailyTimeline from \"./DailyTimeline\";\r\nimport { convertDate, getWeeklyDay } from \"../helper/utils\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt-br\";\r\nmoment.locale(\"pt-br\");\r\n\r\nconst Card = styled.div`\r\n    border: 1px solid lightgray;\r\n    box-shadow: 0 0 3px 1px lightgray;\r\n    background-color: #797cfd;\r\n    border-radius: 30px;\r\n    min-width: 300px;\r\n    height: auto;\r\n    font-size: 20px;\r\n    margin: 5px 10px;\r\n    margin-top: 20px;\r\n    color: #545454;\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: linear-gradient(to top, #797cfd, #9c9efe);\r\n    border-radius: 30px 30px 0px 0px;\r\n    color: white;\r\n    padding: 5px 0px;\r\n\r\n    #date {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        border-radius: 30px;\r\n        padding: 3px;\r\n        #weeklyday {\r\n            min-width: 130px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n        label {\r\n            margin: 5px;\r\n            padding: 5px;\r\n            border-radius: 15px;\r\n            padding: 5px;\r\n        }\r\n        label + label {\r\n            background: white;\r\n            color: gray;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CardInfo = styled.div`\r\n    background: white;\r\n    border-radius: 30px 30px 0px 0px;\r\n    padding-top: 10px;\r\n    h4 {\r\n        color: gray;\r\n    }\r\n\r\n    #hours {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-top: 10px;\r\n    }\r\n\r\n    #infos {\r\n        display: flex;\r\n        flex-direction: column;\r\n        h4 {\r\n            margin-left: 20px;\r\n            margin-top: 20px;\r\n            margin-bottom: 5px;\r\n            color: #454545;\r\n        }\r\n\r\n        div {\r\n            margin-left: 40px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            margin-right: 30px;\r\n\r\n            label {\r\n                color: black;\r\n                weight: bold;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst CardPeriods = styled.div`\r\n    padding-top: 30px;\r\n    background: white;\r\n    height: 94%;\r\n    border-bottom: 1px solid lightgray;\r\n    border-radius: 0px 0px 30px 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    #punchesInTolerance {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        min-height: 60px;\r\n        margin-bottom: 20px;\r\n        label {\r\n            margin-bottom: 5px;\r\n        }\r\n        label + label {\r\n            text-align: center;\r\n        }\r\n    }\r\n`;\r\n\r\nconst DayInfo = ({ day, timeline }) => {\r\n    const shiftIndex = day.jornada ?? null;\r\n    const shiftData = timeline.shifts[shiftIndex];\r\n    const contractualHour = shiftData?.ops.HORAS_CONTRATUAIS.join(\" - \") || \"Não há horas previstas\";\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <div id=\"date\">\r\n                    <label>{convertDate(day.dia, \"DD/MM/YYYY\")}</label>\r\n                    <label id=\"weeklyday\">{getWeeklyDay(day.dia)}</label>\r\n                </div>\r\n            </CardHeader>\r\n\r\n            <CardInfo>\r\n                <div id=\"hours\">\r\n                    <label> Horário contratual </label>\r\n                    <label> {contractualHour} </label>\r\n                </div>\r\n                <div id=\"infos\">\r\n                    <h4>Neste dia</h4>\r\n                    <div>\r\n                        <p>Há feriado? </p>\r\n                        <label> {day.events.isHoliday ? \"Sim\" : \"Não\"} </label>\r\n                    </div>\r\n                    <div>\r\n                        <p>Há afastamento? </p>\r\n                        <label> {day.events.leave.range ? \"Sim\" : \"Não\"} </label>\r\n                    </div>\r\n                </div>\r\n            </CardInfo>\r\n\r\n            <CardPeriods>\r\n                <hr style={{ width: \"90%\", color: \"lightgray\", marginBottom: 10 }} />\r\n                <div id=\"punchesInTolerance\">\r\n                    <label>Batidas na tolerância</label>\r\n                    <label> {day.punchesInTolerance.map((punch) => moment(punch.hora, \"HHmm\").format(\"HH:mm\")).join(\" - \")}</label>\r\n\r\n                </div>\r\n\r\n                {day.timeline.map((timeline, index) => (\r\n                    <div>\r\n                        <hr/>\r\n                        <br />\r\n                        <h4>Período {index + 1}</h4>\r\n                        <DailyTimeline timeline={timeline} />\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n            </CardPeriods>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DayInfo;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DayInfo from \"./DaysInfo\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst ContainerJson = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90vw;\r\n    margin-top: 30px;\r\n\r\n\r\n    #title{\r\n        color: #656565;\r\n        margin-bottom: 40px;\r\n        margin-top: 10px;\r\n    }\r\n`;\r\n\r\nconst ContainerTimeLine = styled.div`\r\n\r\n    #header {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        position: fixed;\r\n        z-index: 1;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        width: 100%;\r\n        background-color: white;\r\n        border-bottom: 1px solid lightgray;\r\n        padding: 14px 0px;\r\n        border-radius: 10px;\r\n        h1 {\r\n            display: flex;\r\n            color: #787878;\r\n\r\n            p {\r\n                margin-left: 30px;\r\n                color: black;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ContainerDays = styled.div`\r\n    display: flex;\r\n    padding-top: 50px;\r\n`;\r\n\r\nconst Timeline = () => {\r\n    const [timeline, setTimeline] = useState({});\r\n\r\n    const handleOnChange = (e) => {\r\n        const { value } = e.target;\r\n        setTimeline(JSON.parse(value));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(timeline).length === 0 && (\r\n                <ContainerJson>\r\n                    <h1 id='title'>Cole o json da timeline no campo abaixo para gerar a leitura.</h1>\r\n                    <textarea onChange={handleOnChange} style={{marginLeft:130, padding: '20px 20px', fontSize: 20}} rows=\"20\" cols=\"120\" placeholder=\"Cole o Json da timeline aqui\" />\r\n                    <Button style={{ display: \"block\", marginTop: 25, width: \"40vw\" }} variant=\"contained\" color=\"primary\">\r\n                        Parse Timeline\r\n                    </Button>\r\n                </ContainerJson>\r\n            )}\r\n\r\n            {Object.keys(timeline).length !== 0 && (\r\n                <ContainerTimeLine>\r\n                    <div id=\"header\">\r\n                        <h1>\r\n                            Período:{\" \"}\r\n                            <p>\r\n                                {timeline.period.slice(4, 6)} / {timeline.period.slice(0, 4)}\r\n                            </p>\r\n                        </h1>\r\n                        <h1>\r\n                            Período está bloqueado?<p>{timeline.blocked ? \"Sim\" : \"Não\"}</p>\r\n                        </h1>\r\n                        <h1>\r\n                            Utiliza sindicato?<p>{timeline.groupOfRules.length ? \"Sim\" : \"Não\"}</p>\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <ContainerDays>\r\n                        {timeline.daysInfos.map((day) => (\r\n                            <DayInfo day={day} timeline={timeline} />\r\n                        ))}\r\n                    </ContainerDays>\r\n                </ContainerTimeLine>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Timeline;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    left: 60%;\r\n    margin: auto;\r\n    font-family: 'Lucida Sans Unicode','Lucida Grande',sans-serif;\r\n    font-size: 13px;\r\n    color: #757575;\r\n\r\n    h1 {\r\n        margin-top: 30px;\r\n        font-size: 40px;\r\n    }\r\n`\r\n\r\nconst ContainerRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-bottom: 20px;\r\n    margin-top: 25px;\r\n\r\n\r\n\r\n`\r\n\r\nconst TextAreaNoResize = styled.textarea`\r\n    resize: none;\r\n`\r\n\r\nconst Label = styled.label`\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst Input = styled.input`\r\n    max-width: 70px;\r\n    text-align: center;\r\n    height: 30px;\r\n    margin-right: 20px;\r\n    border: 1px solid #919191\r\n`\r\n\r\nconst NightlyFactor = ({nightlyTime, setTime, calc, result, remove}) => {\r\n    const handleOnChangeValue = ({target: {value, name}}) => {\r\n        if(isNaN(value)) return;\r\n\r\n        setTime(nightlyTime => ({\r\n            ...nightlyTime,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container>\r\n            <h1>Calculadora de adicional noturno</h1>\r\n            <ContainerRow>\r\n            <Label> Horas</Label>\r\n            <Input  name='hours' value={nightlyTime?.hours || ''} onChange={handleOnChangeValue}/>\r\n            <Label> Minutos</Label>\r\n            <Input name='minutes' value={nightlyTime?.minutes || ''} onChange={handleOnChangeValue} />\r\n        </ContainerRow>\r\n            <TextAreaNoResize\r\n                 readOnly\r\n                 cols='100'\r\n                 rows='10'\r\n                 value={\r\n                     Object.keys(result).length ? `O resultado da operação é ${result.hours.toString().padStart(2, 0)}:${result.minutes.toString().padStart(2, 0)}` : ''\r\n                 }\r\n            />\r\n            <ContainerRow>\r\n                <Button style={{marginRight: 20}} variant=\"contained\" color=\"primary\" onClick={calc}>\r\n                    Adicional Noturno\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={remove}>\r\n                    Remover adicional noturno\r\n                </Button>\r\n            </ContainerRow>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NightlyFactor;","\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    h1 {\r\n        margin-top: 30px;\r\n        color: #656565;\r\n    }\r\n`\r\n\r\nconst Modal = styled.div`\r\n    text-align: center;\r\n    height: 398px;\r\n    width: 600px;\r\n    left: 60%;\r\n    margin: auto;\r\n    border:  1px solid black;\r\n    background-color:  #f1f1f1;\r\n    font-family: 'Lucida Sans Unicode','Lucida Grande',sans-serif;\r\n    font-size: 13px;\r\n    color: #757575;\r\n    margin-top: 30px;\r\n`\r\n\r\nconst InputHour = styled.input`\r\n    text-align: center;\r\n    border: 1px #042e5d solid;\r\n    width: 82px;\r\n    height: 50px;\r\n    margin: 10px;\r\n    font-size: 30px;\r\n`\r\nconst InputHourResult = styled.input`\r\n    border: 1px #042e5d solid;\r\n    width: 82px;\r\n    height: 50px;\r\n    text-align:center;\r\n    font-size: 30px;\r\n    background-color: #283593;\r\n    color: white;\r\n    margin: 10px;\r\n`\r\n\r\nconst ContainerHour = styled.div`\r\n    text-align: center;\r\n    margin-left: 10px;\r\n    font-size: 30px;\r\n    padding: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n`\r\n\r\nconst LabelHour = styled.label`\r\n    color: #fff;\r\n    letter-spacing: 3pt;\r\n    font-size: 15px;\r\n    padding: 10px;\r\n    text-shadow: 0 1px 0 rgba(255,255,255,0.2);\r\n    border: 1px #fcfcfc solid;\r\n    border-radius: 10px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n`\r\nexport {Container, InputHour, InputHourResult, ContainerHour, LabelHour, Modal}","import Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport { Container, ContainerHour, InputHour, InputHourResult, Modal } from \"./hourCalculatorStyles\";\r\n\r\nconst Calculator = ({ handleTime, timeState, setOperation, doCalc, result, setAutoSave }) => {\r\n    const handleOnChange = (e) => {\r\n        const { name, value } = e.target;\r\n        handleTime((timeState) => ({\r\n            ...timeState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleOnChangeAutoSave = (e) => {\r\n        const { checked } = e.target;\r\n        setAutoSave(checked);\r\n    };\r\n\r\n    const handleOnclick = (event) => {\r\n        doCalc(event);\r\n    };\r\n    return (\r\n        <Container>\r\n            <h1>Calculadora de horas</h1>\r\n            <Modal>\r\n                <ContainerHour>\r\n                    <InputHour onChange={handleOnChange} name=\"hour1\" type=\"text\" value={timeState?.hour1 ?? \"\"} />\r\n                    <label for=\"hours\">Horas</label>\r\n                    <InputHour onChange={handleOnChange} name=\"minute1\" value={timeState?.minute1 ?? \"\"} />\r\n                    <label for=\"mins\">Minutos</label>\r\n                </ContainerHour>\r\n                <ContainerHour>\r\n                    <InputHour onChange={handleOnChange} name=\"hour2\" value={timeState?.hour2 ?? \"\"} />\r\n                    <label for=\"hours\">Horas</label>\r\n                    <InputHour onChange={handleOnChange} name=\"minute2\" value={timeState?.minute2 ?? \"\"} />\r\n                    <label for=\"mins\">Minutos</label>\r\n                </ContainerHour>\r\n                <ContainerHour>\r\n                    <Button onClick={() => handleOnclick(\"sum\")} style={{ marginRight: 30 }} variant=\"contained\" color=\"primary\">\r\n                        Adição\r\n                    </Button>\r\n                    <Button onClick={() => handleOnclick(\"reset\")} style={{ marginRight: 30 }} variant=\"contained\" color=\"secondary\">\r\n                        Reset\r\n                    </Button>\r\n                    <Button onClick={() => handleOnclick(\"decrease\")} style={{ marginRight: 40 }} variant=\"contained\" color=\"primary\">\r\n                        Subtração\r\n                    </Button>\r\n                </ContainerHour>\r\n                <hr />\r\n                <ContainerHour>\r\n                    <InputHourResult id=\"resultHour\" value={result?.hours ?? \"\"} type=\"text\" readonly maxlength=\"2\" />\r\n                    <label for=\"hours\">Horas</label>\r\n                    <InputHourResult id=\"resultMinute\" value={result?.minutes ?? \"\"} type=\"text\" readonly maxlength=\"2\" />\r\n                    <label for=\"mins\">Minutos</label>\r\n                </ContainerHour>\r\n                <ContainerHour>\r\n                    <input id=\"auto\" onChange={handleOnChangeAutoSave} type=\"checkbox\" />\r\n                    <label style={{ fontSize: \"20px\", color: \"black\", marginLeft: 10 }} for=\"auto\" class=\"results\">\r\n                        Salvar operação\r\n                    </label>\r\n                </ContainerHour>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Calculator;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #676767;\r\n    margin-top: 30px;\r\n    flex-direction: column;\r\n\r\n    div {\r\n        margin: 20px 0px;\r\n\r\n        div {\r\n            margin-bottom: 30px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            width: 40vw;\r\n\r\n            input{\r\n                height: 40px;\r\n                font-size: 20px;\r\n                text-align: center;\r\n                margin-left: 20px;\r\n            }\r\n            h3 {\r\n                margin-left: 30px;\r\n\r\n            }\r\n\r\n            div +div {\r\n                width: 10vw;\r\n            }\r\n        }\r\n    }\r\n`\r\n","import React, { useState } from \"react\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { converterToCentesimal, converterToSexagesimal } from \"../../helper/calculator\";\r\nimport { Container } from \"./style.js\";\r\n\r\nconst HoursConverter = () => {\r\n    const [sexagesimal, setSexagesimal] = useState(\"00:00\");\r\n    const [centesimal, setCentesimal] = useState(\"0.00\");\r\n\r\n    const handleChangeSexagesimal = (e) => setSexagesimal(converterToCentesimal(e.target.value));\r\n    const handleChangeCentesimal = (e) => setCentesimal(converterToSexagesimal(e.target.value));\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Conversor de Horas</h1>\r\n            <div>\r\n                <div>\r\n                    <div>\r\n                        <h2>Valor em Sexagesimal </h2>\r\n                        <InputMask onChange={(e) => handleChangeSexagesimal(e)} mask=\"99:99\"></InputMask>\r\n                    </div>\r\n                    <div>\r\n                        <h3>{sexagesimal}</h3>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <h2>Valor em Cetesimal </h2>\r\n                        <InputMask onChange={(e) => handleChangeCentesimal(e)} mask=\"99.99\"></InputMask>\r\n                    </div>\r\n                    <div>\r\n                        <h3>{centesimal}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p>*Converta horas de sexagesimal para centesimal e vice versa</p>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default HoursConverter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #676767;\r\n    margin-top: 30px;\r\n    flex-direction: column;\r\n\r\n    div {\r\n        margin-top: 30px;\r\n\r\n        div {\r\n            margin-bottom: 0px;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n\r\n\r\n            input{\r\n                height: 40px;\r\n                margin-left: 40px;\r\n                font-size: 20px;\r\n                text-align: center;\r\n            }\r\n        }\r\n    }\r\n\r\n    #result{\r\n        padding: 5px;\r\n        margin-bottom: 20px;\r\n        height: 50px;\r\n    }\r\n`\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React, { useState } from \"react\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { removeUnderline, secondsToHoursAndMinutes } from \"../../helper/calculator\";\r\nimport { Container } from \"./style.js\";\r\n\r\nconst MultiplyingFactor = () => {\r\n    const [bancoDeHoras, setBancoDeHoras] = useState();\r\n    const [fator, setFator] = useState();\r\n    const [result, setResult] = useState();\r\n\r\n    const hoursToSeconds = ([hour, minutes]) => parseInt(hour) * 3600 + parseInt(minutes) * 60;\r\n\r\n    const factorMinutes = (seconds) => removeUnderline(fator) * seconds;\r\n\r\n    const handleClick = () => {\r\n        if (!bancoDeHoras || !fator) return false;\r\n\r\n        const seconds = hoursToSeconds(removeUnderline(bancoDeHoras).split(\":\"));\r\n        const hoursAndMinutes = secondsToHoursAndMinutes(factorMinutes(seconds));\r\n        setResult(hoursAndMinutes);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Fator Multiplicador</h1>\r\n            <div>\r\n                <div>\r\n                    <h3>Quantidade de Banco</h3>\r\n                    <InputMask onChange={(e) => setBancoDeHoras(e.target.value)} mask=\"99:99\"></InputMask>\r\n                </div>\r\n                <div>\r\n                    <h3>Fator Multiplicador </h3>\r\n                    <InputMask onChange={(e) => setFator(e.target.value)} mask=\"9.9\"></InputMask>\r\n                </div>\r\n            </div>\r\n            <div id=\"result\">{result && <h1>Resultado: {result}</h1>}</div>\r\n            <Button onClick={handleClick} variant=\"contained\" color=\"primary\" style={{ marginBottom: 50 }}>\r\n                Multiplicar\r\n            </Button>\r\n            <p>*Multiplique o banco pelo fator multiplicador</p>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MultiplyingFactor;\r\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    padding-top: 30px;\n    color: #898989;\n`;\n\nexport const Modal = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 40vw;\n    border: 1px solid lightgray;\n    box-shadow: 0 0 10px lightgray;\n    padding: 30px;\n    margin-top: 20px;\n    background: whitesmoke;\n\n    hr {\n        width: 80%;\n        color: #898989;\n        margin-top: 30px;\n        margin-bottom: 10px;\n    }\n\n    #div-addNewButtons {\n        width: 60%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        justify-content: space-around;\n    }\n\n    #div-all-input-hours {\n        margin-top: 20px;\n        width: 80%;\n\n        .div-input-hours {\n            display: flex;\n            align-items: center;\n            justify-content: space-evenly;\n            margin-bottom: 10px;\n            input {\n                background-color: white;\n            }\n        }\n    }\n\n    #div-buttons {\n        margin-top: 30px;\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        width: 70%;\n    }\n\n    #div-results {\n        width: 80%;\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        margin-top: 10px;\n        input {\n            background-color: ghostwhite;\n        }\n    }\n`;\n","import { Button, TextField } from \"@material-ui/core\";\nimport { useRef, useState } from \"react\";\nimport { decreaseHoursAndMinutes, sumHoursAndMinutes } from '../../helper/calculator';\nimport { Container, Modal } from \"./styles\";\n\nfunction HoursCalculator() {\n    const [inputs, setInputs] = useState([1, 1]);\n    const [obj, setObj] = useState({hours: '', minutes: ''})\n\n    let hoursInputRef = useRef(new Array()); \n    let minutesInputRef = useRef(new Array());\n\n    const resetFields = () => {\n        hoursInputRef.current.forEach(elem => elem.value = '')\n        minutesInputRef.current.forEach(elem => elem.value = '')\n        setObj({hours: '', minutes: ''})\n    };\n\n    const handleAddNewInputs = () => inputs.length >= 31 ? false : setInputs([...inputs, 1]);\n\n    const handleRemoveLastInput = () => !inputs.length ? false : setInputs([1, 1]);\n\n    const doCalc = (operation) => {\n        const hours = hoursInputRef.current.map(elem => !elem.value ? 0 : parseInt(elem.value))\n        const minutes = minutesInputRef.current.map(elem => !elem.value ? 0 : parseInt(elem.value))\n        setObj(operation === \"sum\" ? sumHoursAndMinutes({hours, minutes}) : decreaseHoursAndMinutes({hours, minutes}));\n    };\n\n    return (\n        <Container>\n            <h1>Calculadora de Horas</h1>\n            <Modal>\n                <div id=\"div-addNewButtons\">\n                    <Button style={{ backgroundColor: \"#a2cf6e\", color: \"white\", width: 147 }} onClick={handleAddNewInputs} variant=\"contained\">+</Button>\n                    <Button style={{ backgroundColor: \"tomato\", color: \"white\" }} onClick={handleRemoveLastInput} variant=\"contained\">Limpar campos</Button>\n                </div>\n                <div id=\"div-all-input-hours\">\n                    {inputs.map((elem, index) => {\n                        return (\n                            <div className=\"div-input-hours\" key={index}>\n                                <TextField inputRef={(element) => (hoursInputRef.current[index] = element)} className=\"outlined-basic\" label=\"Horas\" variant=\"outlined\" />\n                                <TextField inputRef={(element) => (minutesInputRef.current[index] = element)} className=\"outlined-basic\" label=\"Minutos\" variant=\"outlined\" />\n                            </div>\n                        )})}\n                </div>\n                <div id=\"div-buttons\">\n                    <Button onClick={() => doCalc('sum')} variant=\"contained\" color=\"primary\">Adição</Button>\n                    <Button onClick={() => resetFields(\"reset\")} variant=\"contained\" color=\"secondary\">Reset</Button>\n                    <Button onClick={() => doCalc('decrease')} variant=\"contained\" color=\"primary\">Subtração</Button>\n                </div>\n                <hr />\n                <h1>Resultado</h1>\n                <div id=\"div-results\">\n                    <TextField id=\"filled-basic\"  inputProps={{ readOnly: true }}  variant=\"outlined\" label='Resultado Horas' value={obj.hours} />\n                    <TextField id=\"filled-basic\" inputProps={{ readOnly: true }}  variant=\"outlined\" label='Resultado Minutos' value={obj.minutes}  />\n                </div>\n            </Modal>\n        </Container>\n    );\n}\n\nexport default HoursCalculator;\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { decrease, sum, reset, calcNightlyFactor, removeNightlyFactor } from \"../../helper/calculator\";\r\n\r\n//components\r\nimport TimelineParser from \"../../components/TimelineParser\";\r\nimport Nightly from \"../../components/Nightly\";\r\nimport HourCalculator from \"../../components/HourCalculator\";\r\n\r\n//pages\r\nimport HoursConverter from \"../../pages/hoursConverter\";\r\nimport MultiplyingFactor from \"../../pages/multiplyingFactor\";\r\nimport HoursCalculator from \"../../pages/hoursCalculator\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n});\r\n\r\nconst IndexPage = () => {\r\n    const [value, setValue] = useState(0);\r\n    const [time, setTime] = useState({});\r\n    const [result, setResult] = useState({});\r\n    const [autoSave, setAutoSave] = useState(false);\r\n    const [nightlyTime, setNightlyTime] = useState({});\r\n    const [resultNightly, setResultNightly] = useState({});\r\n\r\n    const chooseMethod = (operation) =>\r\n        ({\r\n            [operation === \"sum\"]: sum(time),\r\n            [operation === \"decrease\"]: decrease(time),\r\n        }[true] || reset(setTime));\r\n\r\n    const doCalc = (operation) => {\r\n        const resultOperation = chooseMethod(operation);\r\n        if (resultOperation && autoSave) {\r\n            setTime((time) => ({\r\n                ...time,\r\n                hour1: resultOperation.hours,\r\n                minute1: resultOperation.minutes,\r\n                hour2: \"\",\r\n                minute2: \"\",\r\n            }));\r\n        }\r\n        setResult(resultOperation);\r\n    };\r\n\r\n    const calcNightly = () => {\r\n        const nightlyResult = calcNightlyFactor(nightlyTime);\r\n        setResultNightly(nightlyResult);\r\n    };\r\n\r\n    const calcRemoveNightlyFactor = () => {\r\n        const resultRemoval = removeNightlyFactor(nightlyTime);\r\n        setResultNightly(resultRemoval);\r\n    };\r\n\r\n    const tabChooser = {\r\n        \r\n        0: <HourCalculator handleTime={setTime} timeState={time} doCalc={doCalc} result={result} setAutoSave={setAutoSave} />,\r\n        1: <Nightly nightlyTime={nightlyTime} setTime={setNightlyTime} result={resultNightly} calc={calcNightly} remove={calcRemoveNightlyFactor} />,\r\n        2: <HoursConverter />,\r\n        3: <MultiplyingFactor />,\r\n        4: <TimelineParser />,\r\n        5: <HoursCalculator />,\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <>\r\n            <Paper className={classes.root} style={{ position: \"fixed\", width: \"100vw\", zIndex: 1 }}>\r\n                <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\r\n                    <Tab label=\"Calculadora\" />\r\n                    <Tab label=\"Adicional Noturno\" />\r\n                    <Tab label=\"Conversor\" />\r\n                    <Tab label=\"Fator Multiplicador\" />\r\n                    <Tab label=\"Timeline Parser\" />\r\n                    <Tab label=\"Calculadora [Beta]\" />\r\n                </Tabs>\r\n            </Paper>\r\n            <div style={{ paddingTop: 49 }}>{tabChooser[value]}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IndexPage;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n     * {\r\n          margin:0;\r\n          padding:0;\r\n          outline: 0;\r\n          box-sizing: border-box;  \r\n          font-family: 'Roboto', sans-serif;\r\n         \r\n     }\r\n     #root {\r\n          margin: 0 auto;\r\n     }\r\n`;\r\n","import IndexPage from \"./pages/mainPage/index\";\r\nimport GlobalStyle from \"./styles/global\";\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <IndexPage />\r\n            <GlobalStyle />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}