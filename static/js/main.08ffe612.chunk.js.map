{"version":3,"sources":["helper/calculator.js","components/ResultsTimeline.js","helper/utils.js","components/DailyTimeline.js","components/DaysInfo.js","components/TimelineParser.js","components/Nightly.js","components/hourCalculatorStyles.js","components/HourCalculator.js","pages/mainPage/index.js","styles/global.js","App.js","reportWebVitals.js","index.js"],"names":["hourToSeconds","hour","minutesToSeconds","minutes","extractHoursFromSeconds","seconds","Math","floor","extractMinutesFromSeconds","getNightlyFactor","styled","input","moment","locale","convertDate","date","format","getWeeklyDay","WeeklyDay","slice","toLocaleUpperCase","length","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","rand","round","random","getModalStyle","top","left","transform","periodTypesTranslator","shift","nightly","punch","leave","tolerance","intinere","onCalls","businessHour","BlockLabel","label","PeriodWrapper","div","DailyTimeline","timeline","classes","useState","modalStyle","open","setOpen","id","className","startInfo","endInfo","title","options","DESC_TIPO_HORA","type","map","join","includes","Modal","onClose","aria-labelledby","aria-describedby","style","motivo","tratamento","tratamento_noturno","nao_abonar_falta","apenas_abonar_ausencia","force_shift_limits","LIMITES_HORAS_ADICIONAIS","HORA_ADICIONAL_ORIGEM","TM_QUANTIDADE","HORA_ADICIONAL_DESTINO","Button","variant","color","onClick","Card","CardHeader","CardInfo","CardPeriods","DayInfo","day","shiftIndex","jornada","shiftData","shifts","contractualHour","ops","HORAS_CONTRATUAIS","dia","events","isHoliday","range","marginBottom","punchesInTolerance","hora","index","ContainerJson","ContainerTimeLine","ContainerDays","Timeline","setTimeline","Object","keys","onChange","e","value","target","JSON","parse","rows","cols","placeholder","display","marginTop","period","blocked","groupOfRules","daysInfos","Container","ContainerRow","TextAreaNoResize","textarea","Label","Input","NightlyFactor","nightlyTime","setTime","calc","result","remove","handleOnChangeValue","name","isNaN","hours","readOnly","toString","padStart","marginRight","InputHour","InputHourResult","ContainerHour","LabelHour","Calculator","handleTime","timeState","doCalc","setOperation","setAutoSave","handleOnChange","handleOnclick","hour1","for","minute1","hour2","minute2","readonly","maxlength","checked","fontSize","class","root","flexGrow","IndexPage","setValue","time","setResult","autoSave","setNightlyTime","resultNightly","setResultNightly","chooseMethod","operation","sumHours","sumMinutes","sum","decrease","reset","tabChooser","0","HourCalculator","resultOperation","1","Nightly","nightlyResult","minutesInSeconds","totalSeconds","resultsWithFactor","calcNightlyFactor","resultRemoval","resultWithoutFactor","ceil","removeNightlyFactor","4","TimelineParser","Paper","Tabs","event","newValue","indicatorColor","textColor","centered","Tab","paddingTop","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08ffe612.chunk.js","sourcesContent":["\n\nconst sum = ({hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0}) => {\n    const sumHours = hourToSeconds(hour1) + hourToSeconds(hour2);\n    const sumMinutes = minutesToSeconds(minute1) + minutesToSeconds(minute2);\n    return {\n        hours: extractHoursFromSeconds(sumHours + sumMinutes),\n        minutes: extractMinutesFromSeconds(sumHours + sumMinutes)\n    };\n}\n\nconst decrease = ({hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0}) => {\n    const sumFirstLine = hourToSeconds(hour1) + minutesToSeconds(minute1);\n    const sumSecondLine =  hourToSeconds(hour2) + minutesToSeconds(minute2);\n\n    const result = sumFirstLine - sumSecondLine;\n    return {\n        hours: extractHoursFromSeconds(result),\n        minutes: extractMinutesFromSeconds(result)\n    };\n}\n\nconst reset = (setTime) => {\n    setTime({});\n    return {};\n}\n\nconst calcNightlyFactor = ({hours, minutes}) => {\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\n    if(!minutesInSeconds && !totalSeconds ) return {};\n\n    const resultsWithFactor = totalSeconds * getNightlyFactor();\n\n    return {\n        hours: extractHoursFromSeconds(resultsWithFactor),\n        minutes: extractMinutesFromSeconds(resultsWithFactor)\n    }\n}\n\nconst removeNightlyFactor = ({hours, minutes}) => {\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\n\n    if(!minutesInSeconds && !totalSeconds) return {};\n\n    const resultWithoutFactor = Math.ceil(totalSeconds / getNightlyFactor());\n\n    return {\n        hours: extractHoursFromSeconds(resultWithoutFactor),\n        minutes: extractMinutesFromSeconds(resultWithoutFactor)\n    }\n}\n\nconst hourToSeconds = hour => hour * 3600;\n\nconst minutesToSeconds = minutes => minutes * 60;\n\nconst extractHoursFromSeconds = seconds => Math.floor(seconds / 3600);\n\nconst extractMinutesFromSeconds = seconds => Math.floor(seconds % 3600 / 60);\n\nconst getNightlyFactor = () => 8/7; \n\nexport { sum, decrease, reset, extractHoursFromSeconds, extractMinutesFromSeconds, calcNightlyFactor, removeNightlyFactor}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n    font-size: 17px;\n`\n\nconst Result = ({title, value}) => {\n    return (\n        <>\n            <label> {title} </label>\n            <Input readOnly value={value}/>\n        </>\n    )\n}\n\nexport default Result;","import moment from \"moment\";\nimport \"moment/locale/pt-br\";\nmoment.locale(\"pt-br\");\nconst convertDate = (date, format) => moment(date).format(format);\n\nconst getWeeklyDay = (date) => {\n    const WeeklyDay = moment(date).format(\"dddd\");\n    return `${WeeklyDay.slice(0, 1).toLocaleUpperCase()}${WeeklyDay.slice(1, WeeklyDay.length)}`;\n};\n\nexport { convertDate, getWeeklyDay };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { convertDate } from \"../helper/utils\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { flexbox } from \"@material-ui/system\";\nimport { blockStatement } from \"@babel/types\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: \"absolute\",\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: \"2px solid #000\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst periodTypesTranslator = {\n    shift: \"Jornada\",\n    nightly: \"Noturno\",\n    punch: \"Batida\",\n    leave: \"Afastamento\",\n    tolerance: \"Tolerância\",\n    intinere: \"Intinere\",\n    onCalls: \"SobreAviso\",\n    businessHour: \"Hora contratual\",\n};\n\nconst BlockLabel = styled.label`\n    display: block;\n`;\n\nconst PeriodWrapper = styled.div`\n    #period {\n        padding-left: 20px;\n        .infos {\n            display: flex;\n            justify-content: space-between;\n\n            p {\n                color: black;\n                font-weight: 500;\n            }\n        }\n    }\n\n    #treatment {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-top: 10px;\n\n        label {\n            margin-top: 20px;\n            color: black;\n        }\n    }\n`;\n\nconst DailyTimeline = ({ timeline }) => {\n    const classes = useStyles();\n    const [modalStyle] = useState(getModalStyle);\n    const [open, setOpen] = useState(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <PeriodWrapper>\n            <div id=\"period\">\n                <div className=\"infos\">\n                    <label>Inicio: </label>\n                    <p> {convertDate(timeline.startInfo, \"DD/MM/YYYY HH:mm\")} </p>\n                </div>\n                <div className=\"infos\">\n                    <label>Fim: </label>\n                    <p> {convertDate(timeline.endInfo, \"DD/MM/YYYY HH:mm\")} </p>\n                </div>\n            </div>\n            <div id=\"treatment\">\n                <label title=\"Gerará essa hora adicional caso esse período seja de batida\"> Tratamento caso trabalhado</label>\n                <p> {timeline.options?.shift?.DESC_TIPO_HORA} </p>\n                <label>Tipo do período </label>\n                <p>{timeline.type.map((type) => periodTypesTranslator[type]).join(\", \")} </p>\n            </div>\n\n            {timeline.type.includes(\"leave\") && (\n                <>\n                    <Modal open={open} onClose={handleClose} aria-labelledby=\"simple-modal-title\" aria-describedby=\"simple-modal-description\">\n                        <div style={modalStyle} className={classes.paper}>\n                            <BlockLabel>Motivo Afastamento: {`${timeline.options.leave.motivo}`}</BlockLabel>\n                            <BlockLabel>Tratamento: {`${timeline.options.leave.tratamento}`}</BlockLabel>\n                            <BlockLabel>Tratamento Noturno: {`${timeline.options.leave.tratamento_noturno}`}</BlockLabel>\n                            <BlockLabel>Não abona: {`${timeline.options.leave.nao_abonar_falta}`}</BlockLabel>\n                            <BlockLabel>Abona apenas ausências: {`${timeline.options.leave.apenas_abonar_ausencia}`}</BlockLabel>\n                            <BlockLabel>Força o tratamento da jornada/escala: {`${timeline.options.leave.force_shift_limits}`}</BlockLabel>\n                            <BlockLabel>Possui limites: {`${timeline.options.leave?.LIMITES_HORAS_ADICIONAIS?.length > 0 || \"Não\"}`}</BlockLabel>\n                            {timeline.options.leave?.LIMITES_HORAS_ADICIONAIS?.length > 0 && (\n                                <>\n                                    <BlockLabel>Origem: {`${timeline.options.leave.LIMITES_HORAS_ADICIONAIS[0].HORA_ADICIONAL_ORIGEM}`}</BlockLabel>\n                                    <BlockLabel>Quantidade: {`${timeline.options.leave.LIMITES_HORAS_ADICIONAIS[0].TM_QUANTIDADE}`}</BlockLabel>\n                                    <BlockLabel>Destino: {`${timeline.options.leave.LIMITES_HORAS_ADICIONAIS[0].HORA_ADICIONAL_DESTINO}`}</BlockLabel>\n                                </>\n                            )}\n                        </div>\n                    </Modal>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleOpen}>\n                        Ver dados Afastamento\n                    </Button>\n                </>\n            )}\n        </PeriodWrapper>\n    );\n};\n\nexport default DailyTimeline;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DailyTimeline from \"./DailyTimeline\";\nimport { convertDate, getWeeklyDay } from \"../helper/utils\";\nimport moment from \"moment\";\nimport momentDuration from \"moment-duration-format\";\nimport { extractMinutesFromSeconds, extractHoursFromSeconds } from \"../helper/calculator\";\nimport \"moment/locale/pt-br\";\nmoment.locale(\"pt-br\");\n\nconst Card = styled.div`\n    border: 1px solid lightgray;\n    box-shadow: 0 0 3px 1px lightgray;\n    background-color: #797cfd;\n    border-radius: 30px;\n    min-width: 300px;\n    height: auto;\n    font-size: 20px;\n    margin: 5px 10px;\n    margin-top: 20px;\n    color: #545454;\n`;\n\nconst CardHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    background: linear-gradient(to top, #797cfd, #9c9efe);\n    border-radius: 30px 30px 0px 0px;\n    color: white;\n    padding: 5px 0px;\n\n    #date {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        border-radius: 30px;\n        padding: 3px;\n        #weeklyday {\n            min-width: 130px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        label {\n            margin: 5px;\n            padding: 5px;\n            border-radius: 15px;\n            padding: 5px;\n        }\n        label + label {\n            background: white;\n            color: gray;\n        }\n    }\n`;\n\nconst CardInfo = styled.div`\n    background: white;\n    border-radius: 30px 30px 0px 0px;\n    padding-top: 10px;\n    h4 {\n        color: gray;\n    }\n\n    #hours {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-top: 10px;\n    }\n\n    #infos {\n        display: flex;\n        flex-direction: column;\n        h4 {\n            margin-left: 20px;\n            margin-top: 20px;\n            margin-bottom: 5px;\n            color: #454545;\n        }\n\n        div {\n            margin-left: 40px;\n            display: flex;\n            justify-content: space-between;\n            margin-right: 30px;\n\n            label {\n                color: black;\n                weight: bold;\n            }\n        }\n    }\n`;\n\nconst CardPeriods = styled.div`\n    padding-top: 30px;\n    background: white;\n    height: 90%;\n    border-bottom: 1px solid lightgray;\n    border-radius: 0px 0px 30px 30px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    #punchesInTolerance {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        min-height: 60px;\n    }\n`;\n\nconst DayInfo = ({ day, timeline }) => {\n    const shiftIndex = day.jornada ?? null;\n    const shiftData = timeline.shifts[shiftIndex];\n    const contractualHour = shiftData?.ops.HORAS_CONTRATUAIS.join(\" - \") || \"Não há horas previstas\";\n\n    return (\n        <Card>\n            <CardHeader>\n                <div id=\"date\">\n                    <label>{convertDate(day.dia, \"DD/MM/YYYY\")}</label>\n                    <label id=\"weeklyday\">{getWeeklyDay(day.dia)}</label>\n                </div>\n            </CardHeader>\n\n            <CardInfo>\n                <div id=\"hours\">\n                    <label> Horário contratual </label>\n                    <label> {contractualHour} </label>\n                </div>\n                <div id=\"infos\">\n                    <h4>Neste dia</h4>\n                    <div>\n                        <p>Há feriado? </p>\n                        <label> {day.events.isHoliday ? \"Sim\" : \"Não\"} </label>\n                    </div>\n                    <div>\n                        <p>Há afastamento? </p>\n                        <label> {day.events.leave.range ? \"Sim\" : \"Não\"} </label>\n                    </div>\n                </div>\n            </CardInfo>\n\n            <CardPeriods>\n                <hr style={{ width: \"90%\", color: \"lightgray\", marginBottom: 10 }} />\n                <div id=\"punchesInTolerance\">\n                    <label>Batidas na tolerância</label>\n                    <label> {day.punchesInTolerance.map((punch) => moment(punch.hora, \"HHmm\").format(\"HH:mm\")).join(\" - \")}</label>\n                </div>\n\n                {day.timeline.map((timeline, index) => (\n                    <div>\n                        <hr />\n                        <br />\n                        <h4>Período {index + 1}</h4>\n                        <DailyTimeline timeline={timeline} />\n\n                        <br />\n                    </div>\n                ))}\n            </CardPeriods>\n        </Card>\n    );\n};\n\nexport default DayInfo;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Result from \"./ResultsTimeline\";\nimport DayInfo from \"./DaysInfo\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ContainerJson = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 90vw;\n    margin-top: 30px;\n`;\n\nconst ContainerTimeLine = styled.div`\n    #header {\n        display: flex;\n        justify-content: space-around;\n        position: fixed;\n        left: 50%;\n        transform: translateX(-50%);\n        width: 100%;\n        background-color: white;\n        border-bottom: 1px solid lightgray;\n        padding: 14px 0px;\n        border-radius: 10px;\n        h1 {\n            display: flex;\n            color: #787878;\n\n            p {\n                margin-left: 30px;\n                color: black;\n            }\n        }\n    }\n`;\n\nconst ContainerDays = styled.div`\n    display: flex;\n    padding-top: 50px;\n`;\n\nconst Timeline = () => {\n    const [timeline, setTimeline] = useState({});\n\n    const handleOnChange = (e) => {\n        const { value } = e.target;\n        setTimeline(JSON.parse(value));\n    };\n\n    return (\n        <>\n            {Object.keys(timeline).length == 0 && (\n                <ContainerJson>\n                    <textarea onChange={handleOnChange} rows=\"20\" cols=\"150\" placeholder=\"Cole o Json da timeline aqui\" />\n                    <Button style={{ display: \"block\", marginTop: 25, width: \"40vw\" }} variant=\"contained\" color=\"primary\">\n                        Parse Timeline\n                    </Button>\n                </ContainerJson>\n            )}\n\n            {Object.keys(timeline).length != 0 && (\n                <ContainerTimeLine>\n                    <div id=\"header\">\n                        <h1>\n                            Período:{\" \"}\n                            <p>\n                                {timeline.period.slice(4, 6)} / {timeline.period.slice(0, 4)}\n                            </p>\n                        </h1>\n                        <h1>\n                            Período está bloqueado?<p>{timeline.blocked ? \"Sim\" : \"Não\"}</p>\n                        </h1>\n                        <h1>\n                            Utiliza sindicato?<p>{timeline.groupOfRules.length ? \"Sim\" : \"Não\"}</p>\n                        </h1>\n                    </div>\n\n                    <ContainerDays>\n                        {timeline.daysInfos.map((day) => (\n                            <DayInfo day={day} timeline={timeline} />\n                        ))}\n                    </ContainerDays>\n                </ContainerTimeLine>\n            )}\n        </>\n    );\n};\n\nexport default Timeline;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst Container = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    left: 60%;\n    margin: auto;\n    font-family: 'Lucida Sans Unicode','Lucida Grande',sans-serif;\n    font-size: 13px;\n    color: #757575;\n`\n\nconst ContainerRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 20px;\n    margin-top: 25px;\n\n`\n\nconst TextAreaNoResize = styled.textarea`\n    resize: none;\n`\n\nconst Label = styled.label`\n    font-size: 25px;\n    font-weight: bold;\n    margin-right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nconst Input = styled.input`\n    max-width: 70px;\n    text-align: center;\n    height: 30px;\n    border-radius: 10px;\n    margin-right: 20px;\n    border: 1px solid #919191\n`\n\nconst NightlyFactor = ({nightlyTime, setTime, calc, result, remove}) => {\n    const handleOnChangeValue = ({target: {value, name}}) => {\n        if(isNaN(value)) return;\n\n        setTime(nightlyTime => ({\n            ...nightlyTime,\n            [name]: value\n        }))\n    }\n\n    return (\n        <>\n        <Container>\n            <ContainerRow>\n            <Label> Horas</Label>\n            <Input  name='hours' value={nightlyTime?.hours || ''} onChange={handleOnChangeValue}/>\n            <Label> Minutos</Label>\n            <Input name='minutes' value={nightlyTime?.minutes || ''} onChange={handleOnChangeValue} />\n        </ContainerRow>\n            <TextAreaNoResize\n                 readOnly\n                 cols='100'\n                 rows='10'\n                 value={\n                     Object.keys(result).length ? `O resultado da operação é ${result.hours.toString().padStart(2, 0)}:${result.minutes.toString().padStart(2, 0)}` : ''\n                 }\n            />\n            <ContainerRow>\n                <Button style={{marginRight: 20}} variant=\"contained\" color=\"primary\" onClick={calc}>\n                    Adicional Noturno\n                </Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={remove}>\n                    Remover adicional noturno\n                </Button>\n            </ContainerRow>\n        </Container>\n        </>\n    )\n}\n\nexport default NightlyFactor;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    text-align: center;\n    height: 398px;\n    width: 600px;\n    left: 60%;\n    margin: auto;\n    border:  1px solid black;\n    background-color:  #f1f1f1;\n    font-family: 'Lucida Sans Unicode','Lucida Grande',sans-serif;\n    font-size: 13px;\n    color: #757575;\n    margin-top: 30px;\n`\n\nconst InputHour = styled.input`\n    text-align: center;\n    border: 1px #042e5d solid;\n    width: 82px;\n    height: 50px;\n    margin: 10px;\n    font-size: 30px;\n`\nconst InputHourResult = styled.input`\n    border: 1px #042e5d solid;\n    width: 82px;\n    height: 50px;\n    text-align:center;\n    font-size: 30px;\n    background-color: #042e5d;\n    color: white;\n    margin: 10px;\n`\n\nconst ContainerHour = styled.div`\n    text-align: center;\n    margin-left: 10px;\n    font-size: 30px;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n`\n\nconst LabelHour = styled.label`\n    color: #fff;\n    letter-spacing: 3pt;\n    font-size: 15px;\n    padding: 10px;\n    background: rgb(7, 86, 151);\n    text-shadow: 0 1px 0 rgba(255,255,255,0.2);\n    border: 1px #fcfcfc solid;\n    border-radius: 10px;\n    margin-left: 15px;\n    cursor: pointer;\n`\nexport {Container, InputHour, InputHourResult, ContainerHour, LabelHour}","import React from 'react';\nimport\n    {\n        Container,\n        InputHour,\n        InputHourResult,\n        ContainerHour,\n        LabelHour\n    }  from './hourCalculatorStyles';\n\nconst Calculator = ({ handleTime, timeState, setOperation, doCalc, result, setAutoSave}) => {\n       const handleOnChange = (e) => {\n        const {name, value} = e.target;\n        handleTime(timeState => ({\n            ...timeState,\n            [name]: value\n        }))\n    }\n\n    const handleOnChangeAutoSave = (e) => {\n        const {checked} = e.target;\n        setAutoSave(checked);\n    }\n\n    const handleOnclick = (e) => {\n        const { id } = e.target;\n        doCalc(id);\n    }\n    return (\n        <>\n            <Container>\n                    <ContainerHour>\n                        <InputHour onChange={handleOnChange} name= 'hour1' type=\"text\" value={timeState?.hour1 ?? ''}/>\n                        <label for=\"hours\">Horas</label>\n                        <InputHour onChange={handleOnChange} name='minute1' value={timeState?.minute1 ?? ''}/>\n                        <label for=\"mins\">Minutos</label>\n                    </ContainerHour>\n                    <ContainerHour>\n                        <InputHour  onChange={handleOnChange} name='hour2' value={timeState?.hour2 ?? ''} />\n                        <label for=\"hours\">Horas</label>\n                        <InputHour  onChange={handleOnChange} name='minute2' value={timeState?.minute2 ?? ''}/>\n                        <label for=\"mins\">Minutos</label>\n                    </ContainerHour>\n                    <ContainerHour>\n                        <LabelHour onClick={handleOnclick} id=\"sum\">Adição </LabelHour>\n                        <LabelHour onClick={handleOnclick} id=\"reset\">Reset</LabelHour>\n                        <LabelHour onClick={handleOnclick} id=\"decrease\">Subtração</LabelHour>\n                    </ContainerHour>\n                <hr/>\n                    <ContainerHour>\n                        <InputHourResult id=\"resultHour\" value={result?.hours ?? ''} type=\"text\" readonly maxlength=\"2\"/>\n                        <label for=\"hours\">Horas</label>\n                        <InputHourResult id=\"resultMinute\" value={result?.minutes ?? ''} type=\"text\"  readonly maxlength=\"2\"/>\n                        <label for=\"mins\">Minutos</label>\n                    </ContainerHour>\n                    <ContainerHour>\n                        <input  id=\"auto\" onChange={handleOnChangeAutoSave} type=\"checkbox\"/>\n                        <label style={{fontSize: '20px', color: 'black'}} for=\"auto\"class=\"results\">Salvar operação</label>\n                    </ContainerHour>\n            </Container>\n        </>\n    )\n}\n\nexport default Calculator;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { decrease, sum, reset, calcNightlyFactor, removeNightlyFactor } from \"../../helper/calculator\";\nimport TimelineParser from \"../../components/TimelineParser\";\nimport Nightly from \"../../components/Nightly\";\n\nimport HourCalculator from \"../../components/HourCalculator\";\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst IndexPage = () => {\n    const [value, setValue] = useState(0);\n    const [time, setTime] = useState({});\n    const [result, setResult] = useState({});\n    const [autoSave, setAutoSave] = useState(false);\n    const [nightlyTime, setNightlyTime] = useState({});\n    const [resultNightly, setResultNightly] = useState({});\n\n    const chooseMethod = (operation) =>\n        ({\n            [operation === \"sum\"]: sum(time),\n            [operation === \"decrease\"]: decrease(time),\n        }[true] || reset(setTime));\n\n    const doCalc = (operation) => {\n        const resultOperation = chooseMethod(operation);\n        if (resultOperation && autoSave) {\n            setTime((time) => ({\n                ...time,\n                hour1: resultOperation.hours,\n                minute1: resultOperation.minutes,\n                hour2: \"\",\n                minute2: \"\",\n            }));\n        }\n        setResult(resultOperation);\n    };\n\n    const calcNightly = () => {\n        const nightlyResult = calcNightlyFactor(nightlyTime);\n        setResultNightly(nightlyResult);\n    };\n\n    const calcRemoveNightlyFactor = () => {\n        const resultRemoval = removeNightlyFactor(nightlyTime);\n        setResultNightly(resultRemoval);\n    };\n\n    const tabChooser = {\n        0: <HourCalculator handleTime={setTime} timeState={time} doCalc={doCalc} result={result} setAutoSave={setAutoSave} />,\n        1: <Nightly nightlyTime={nightlyTime} setTime={setNightlyTime} result={resultNightly} calc={calcNightly} remove={calcRemoveNightlyFactor} />,\n        4: <TimelineParser />,\n    };\n\n    const classes = useStyles();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <>\n            <Paper className={classes.root} style={{ position: \"fixed\", width: \"100vw\" }}>\n                <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n                    <Tab label=\"Calculadora\" />\n                    <Tab label=\"Adicional Noturno\" />\n                    <Tab label=\"Conversor\" />\n                    <Tab label=\"Fator Multiplicador\" />\n                    <Tab label=\"Timeline Parser\" />\n                </Tabs>\n            </Paper>\n            <div style={{ paddingTop: 49 }}>{tabChooser[value]}</div>\n        </>\n    );\n};\n\nexport default IndexPage;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n     * {\n          margin:0;\n          padding:0;\n          outline: 0;\n          box-sizing: border-box;  \n          font-family: 'Roboto', sans-serif;\n         \n     }\n     #root {\n          margin: 0 auto;\n     }\n`;\n","import IndexPage from \"./pages/mainPage/index\";\nimport GlobalStyle from \"./styles/global\";\nfunction App() {\n    return (\n        <>\n            <IndexPage />\n            <GlobalStyle />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}