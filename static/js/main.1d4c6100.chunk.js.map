{"version":3,"sources":["logo.svg","components/hourCalculatorStyles.js","components/hourCalculator.js","pages/helper/calculator.js","components/resultsTimeline.js","pages/helper/utils.js","components/DailyTimeline.js","components/DaysInfo.js","components/timelineParser.js","components/Nightly.js","pages/calculatorPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","InputHour","input","InputHourResult","ContainerHour","LabelHour","label","Calculator","handleTime","timeState","doCalc","setOperation","result","setAutoSave","handleOnChange","e","target","name","value","handleOnclick","id","onChange","type","hour1","for","minute1","hour2","minute2","onClick","hours","readonly","maxlength","minutes","checked","style","fontSize","color","class","hourToSeconds","hour","minutesToSeconds","extractHoursFromSeconds","seconds","Math","floor","extractMinutesFromSeconds","getNightlyFactor","Input","Result","title","readOnly","moment","locale","convertDate","date","format","periodTypesTranslator","shift","nightly","punch","leave","tolerance","intinere","onCalls","businessHour","QuestionLabel","ResponseLabel","PeriodWrapper","DailyTimeline","timeline","startInfo","endInfo","options","DESC_TIPO_HORA","map","join","Label","DayInfo","day","shiftIndex","jornada","shiftData","shifts","contractualHour","ops","HORAS_CONTRATUAIS","dia","events","isHoliday","range","punchesInTolerance","hora","index","ContainerDays","Timeline","useState","setTimeline","Object","keys","length","JSON","parse","rows","cols","placeholder","Button","display","variant","period","blocked","groupOfRules","daysInfos","ContainerRow","TextAreaNoResize","textarea","NightlyFactor","nightlyTime","setTime","calc","remove","handleOnChangeValue","isNaN","toString","padStart","useStyles","makeStyles","root","flexGrow","IndexPage","setValue","time","setResult","autoSave","setNightlyTime","resultNightly","setResultNightly","chooseMethod","operation","sumHours","sumMinutes","sum","decrease","reset","tabChooser","0","resultOperation","1","Nightly","nightlyResult","minutesInSeconds","totalSeconds","resultsWithFactor","calcNightlyFactor","resultRemoval","resultWithoutFactor","ceil","removeNightlyFactor","4","classes","Paper","className","Tabs","event","newValue","indicatorColor","textColor","centered","Tab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d4c6100.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    height: 398px;\r\n    width: 600px;\r\n    left: 60%;\r\n    margin: auto;\r\n    border:  1px solid black;\r\n    background-color:  #f1f1f1;\r\n    font-family: 'Lucida Sans Unicode','Lucida Grande',sans-serif;\r\n    font-size: 13px;\r\n    color: #757575;\r\n`\r\n\r\nconst InputHour = styled.input`\r\n    text-align: center;\r\n    border: 1px #042e5d solid;\r\n    width: 82px;\r\n    height: 50px;\r\n    margin-left: 10px;\r\n    font-size: 30px;\r\n`\r\nconst InputHourResult = styled.input`\r\n    border: 1px #042e5d solid;\r\n    width: 82px;\r\n    height: 50px;\r\n    text-align:center;\r\n    font-size: 30px;\r\n    background-color: #042e5d;\r\n    color: white;\r\n`\r\n\r\nconst ContainerHour = styled.div`\r\n    text-align: center;\r\n    margin-left: 10px;\r\n    font-size: 30px;\r\n    padding: 10px;\r\n\r\n`\r\n\r\nconst LabelHour = styled.label`\r\n    color: #fff;\r\n    letter-spacing: 3pt;\r\n    font-size: 15px;\r\n    padding: 10px;\r\n    background: rgb(7, 86, 151);\r\n    text-shadow: 0 1px 0 rgba(255,255,255,0.2);\r\n    border: 1px #fcfcfc solid;\r\n    border-radius: 10px;\r\n    margin-left: 15px;\r\n    cursor: pointer;\r\n`\r\nexport {Container, InputHour, InputHourResult, ContainerHour, LabelHour}","import React from 'react';\r\nimport\r\n    {\r\n        Container,\r\n        InputHour,\r\n        InputHourResult,\r\n        ContainerHour,\r\n        LabelHour\r\n    }  from './hourCalculatorStyles';\r\n\r\nconst Calculator = ({ handleTime, timeState, setOperation, doCalc, result, setAutoSave}) => {\r\n       const handleOnChange = (e) => {\r\n        const {name, value} = e.target;\r\n        handleTime(timeState => ({\r\n            ...timeState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const handleOnChangeAutoSave = (e) => {\r\n        const {checked} = e.target;\r\n        setAutoSave(checked);\r\n    }\r\n\r\n    const handleOnclick = (e) => {\r\n        const { id } = e.target;\r\n        doCalc(id);\r\n    }\r\n    return (\r\n        <>\r\n            <Container>\r\n                    <ContainerHour>\r\n                        <InputHour onChange={handleOnChange} name= 'hour1' type=\"text\" value={timeState?.hour1 ?? ''}/>\r\n                        <label for=\"hours\">Horas</label>\r\n                        <InputHour onChange={handleOnChange} name='minute1' value={timeState?.minute1 ?? ''}/>\r\n                        <label for=\"mins\">Minutos</label>\r\n                    </ContainerHour>\r\n                    <ContainerHour>\r\n                        <InputHour  onChange={handleOnChange} name='hour2' value={timeState?.hour2 ?? ''} />\r\n                        <label for=\"hours\">Horas</label>\r\n                        <InputHour  onChange={handleOnChange} name='minute2' value={timeState?.minute2 ?? ''}/>\r\n                        <label for=\"mins\">Minutos</label>\r\n                    </ContainerHour>\r\n                    <ContainerHour>\r\n                        <LabelHour onClick={handleOnclick} id=\"sum\">Adição </LabelHour>\r\n                        <LabelHour onClick={handleOnclick} id=\"reset\">Reset</LabelHour>\r\n                        <LabelHour onClick={handleOnclick} id=\"decrease\">Subtração</LabelHour>\r\n                    </ContainerHour>\r\n                <hr/>\r\n                    <ContainerHour>\r\n                        <InputHourResult id=\"resultHour\" value={result?.hours ?? ''} type=\"text\" readonly maxlength=\"2\"/>\r\n                        <label for=\"hours\">Horas</label>\r\n                        <InputHourResult id=\"resultMinute\" value={result?.minutes ?? ''} type=\"text\"  readonly maxlength=\"2\"/>\r\n                        <label for=\"mins\">Minutos</label>\r\n                    </ContainerHour>\r\n                    <ContainerHour>\r\n                        <input  id=\"auto\" onChange={handleOnChangeAutoSave} type=\"checkbox\"/>\r\n                        <label style={{fontSize: '20px', color: 'black'}} for=\"auto\"class=\"results\">Salvar operação</label>\r\n                    </ContainerHour>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calculator;","\r\n\r\nconst sum = ({hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0}) => {\r\n    const sumHours = hourToSeconds(hour1) + hourToSeconds(hour2);\r\n    const sumMinutes = minutesToSeconds(minute1) + minutesToSeconds(minute2);\r\n    return {\r\n        hours: extractHoursFromSeconds(sumHours + sumMinutes),\r\n        minutes: extractMinutesFromSeconds(sumHours + sumMinutes)\r\n    };\r\n}\r\n\r\nconst decrease = ({hour1 = 0, hour2 = 0, minute1 = 0, minute2 = 0}) => {\r\n    const sumFirstLine = hourToSeconds(hour1) + minutesToSeconds(minute1);\r\n    const sumSecondLine =  hourToSeconds(hour2) + minutesToSeconds(minute2);\r\n\r\n    const result = sumFirstLine - sumSecondLine;\r\n    return {\r\n        hours: extractHoursFromSeconds(result),\r\n        minutes: extractMinutesFromSeconds(result)\r\n    };\r\n}\r\n\r\nconst reset = (setTime) => {\r\n    setTime({});\r\n    return {};\r\n}\r\n\r\nconst calcNightlyFactor = ({hours, minutes}) => {\r\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\r\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\r\n    if(!minutesInSeconds && !totalSeconds ) return {};\r\n\r\n    const resultsWithFactor = totalSeconds * getNightlyFactor();\r\n\r\n    return {\r\n        hours: extractHoursFromSeconds(resultsWithFactor),\r\n        minutes: extractMinutesFromSeconds(resultsWithFactor)\r\n    }\r\n}\r\n\r\nconst removeNightlyFactor = ({hours, minutes}) => {\r\n    const minutesInSeconds = minutes ? minutesToSeconds(minutes) : 0;\r\n    const totalSeconds = hours ? hourToSeconds(hours) + minutesInSeconds : minutesInSeconds;\r\n\r\n    if(!minutesInSeconds && !totalSeconds) return {};\r\n\r\n    const resultWithoutFactor = Math.ceil(totalSeconds / getNightlyFactor());\r\n\r\n    return {\r\n        hours: extractHoursFromSeconds(resultWithoutFactor),\r\n        minutes: extractMinutesFromSeconds(resultWithoutFactor)\r\n    }\r\n}\r\n\r\nconst hourToSeconds = hour => hour * 3600;\r\n\r\nconst minutesToSeconds = minutes => minutes * 60;\r\n\r\nconst extractHoursFromSeconds = seconds => Math.floor(seconds / 3600);\r\n\r\nconst extractMinutesFromSeconds = seconds => Math.floor(seconds % 3600 / 60);\r\n\r\nconst getNightlyFactor = () => 8/7; \r\n\r\nexport { sum, decrease, reset, extractHoursFromSeconds, extractMinutesFromSeconds, calcNightlyFactor, removeNightlyFactor}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n    font-size: 17px;\r\n`\r\n\r\nconst Result = ({title, value}) => {\r\n    return (\r\n        <>\r\n            <label> {title} </label>\r\n            <Input readOnly value={value}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Result;","import moment from 'moment';\r\nimport 'moment/locale/pt-br';\r\nmoment.locale('pt-br')\r\nconst convertDate = (date, format) => moment(date).format(format);\r\n\r\nconst getWeeklyDay = (date) => moment(date).format('dddd');\r\n\r\nexport {\r\n    convertDate,\r\n    getWeeklyDay\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { convertDate } from '../pages/helper/utils';\r\nconst periodTypesTranslator = {\r\n    shift: 'Jornada',\r\n    nightly: 'Noturno',\r\n    punch: 'Batida',\r\n    leave: 'Afastamento',\r\n    tolerance: 'Tolerância',\r\n    intinere: 'Intinere',\r\n    onCalls: 'SobreAviso',\r\n    businessHour: 'Hora contratual'\r\n}\r\n\r\nconst QuestionLabel = styled.label`\r\n    font-weight: bold;\r\n`\r\n\r\nconst ResponseLabel = styled.label`\r\n    color: blue;\r\n`\r\n\r\nconst PeriodWrapper = styled.div`\r\n    border: 0px solid black;\r\n`\r\n\r\nconst DailyTimeline = ({ timeline }) => {\r\n    return (\r\n        <PeriodWrapper>\r\n            <QuestionLabel> Inicio periodo: </QuestionLabel>\r\n            <ResponseLabel> {convertDate(timeline.startInfo, 'DD/MM/YYYY HH:MM') } </ResponseLabel>\r\n            <br></br>\r\n            <QuestionLabel> Fim Periodo: </QuestionLabel>\r\n            <ResponseLabel> {convertDate(timeline.endInfo, 'DD/MM/YYYY HH:MM') } </ResponseLabel>\r\n            <br></br>\r\n            <QuestionLabel title='Gerará essa hora adicional caso esse período seja de batida'> Tratamento caso trabalhado neste período: </QuestionLabel>\r\n            <label> {timeline.options?.shift?.DESC_TIPO_HORA} </label>\r\n            <br></br>\r\n            <QuestionLabel> Tipo do período: </QuestionLabel>\r\n            <label> {timeline.type.map(type => periodTypesTranslator[type]).join(', ')} </label>\r\n            {/* <br/> <br/> */}\r\n            {/* {timeline.type.includes('leave') && (\r\n                <>\r\n                <QuestionLabel> Afastamento: {timeline.options.leave?.motivo} </QuestionLabel>\r\n                <QuestionLabel style={{display: 'block'}}> Tratamento: {timeline.options.leave.tratamento} </QuestionLabel>\r\n                </>\r\n            )\r\n            } */}\r\n        </PeriodWrapper>\r\n    )\r\n}\r\n\r\nexport default DailyTimeline;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport DailyTimeline from './DailyTimeline';\r\nimport { convertDate, getWeeklyDay } from '../pages/helper/utils';\r\nimport moment from 'moment';\r\nimport momentDuration from 'moment-duration-format';\r\nimport {\r\n    extractMinutesFromSeconds,\r\n    extractHoursFromSeconds\r\n} from '../pages/helper/calculator';\r\n\r\n\r\nconst Container = styled.div`\r\n    border: 1px solid black;\r\n    min-width: 300px;\r\n    height: auto;\r\n    font-size: 20px;\r\n    padding-left: 5px;\r\n    padding-right: 5px;\r\n`\r\nconst Label = styled.label`\r\n    display: block;\r\n`\r\n\r\nconst DayInfo = ({ day, timeline }) => {\r\n    const shiftIndex = day.jornada || false;\r\n    const shiftData = shiftIndex ?  timeline.shifts[shiftIndex] : null;\r\n    const contractualHour = shiftData?.ops.HORAS_CONTRATUAIS.join('-') || 'Não há horas previstas';\r\n    return (\r\n        <Container>\r\n            <Label>Dia {convertDate(day.dia, 'DD/MM/YYYY')}</Label> <br></br>\r\n            <Label>Dia da semana: {getWeeklyDay(day.dia)}</Label> <br></br>\r\n            <Label> Horário contratual: </Label>\r\n            <Label> {contractualHour} </Label>\r\n\r\n            <hr></hr>\r\n            <label>Há feriado neste dia? </label>\r\n            <label> {day.events.isHoliday ? 'Sim' : 'Não'} </label>\r\n            <br></br>\r\n            <label>Há afastamento neste dia? </label>\r\n            <label> {day.events.leave.range ? 'Sim' : 'Não'} </label>\r\n            <Label> Batidas na tolerância</Label>\r\n            <Label> {day.punchesInTolerance.map(punch => moment(punch.hora).format('HH:MM')).join('-')}</Label>\r\n            {day.timeline.map((timeline, index) => (\r\n                <>\r\n                <br></br>\r\n                <label>Período {index + 1 }</label>\r\n                <DailyTimeline timeline={timeline}/>\r\n                <br></br>\r\n                </>\r\n            ))}\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DayInfo;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Result from './resultsTimeline';\r\nimport DayInfo from './DaysInfo';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst ContainerDays = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Timeline = () => {\r\n    const [timeline, setTimeline] = useState({});\r\n\r\n    const handleOnChange = (e) => {\r\n        const {value} = e.target;\r\n        setTimeline(JSON.parse(value));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {Object.keys(timeline).length == 0 && (\r\n            <>\r\n            <textarea onChange={handleOnChange} rows='20' cols='150' placeholder='Cole o Json da timeline aqui'/>\r\n            <Button style={{display: 'block'}} variant=\"contained\" color=\"primary\">Parse Timeline</Button>\r\n            </>\r\n        )}\r\n        {Object.keys(timeline).length != 0 && (\r\n            <>\r\n                <Result title='Periodo' value={timeline.period}/>\r\n                <Result title='Periodo está bloqueado?' value={timeline.blocked ? 'Sim': 'Não'}/>\r\n                <Result title='Utiliza sindicato?' value={timeline.groupOfRules.length ? 'Sim': 'Não'}/>\r\n                <ContainerDays>\r\n                {timeline.daysInfos.map(day => (\r\n                    <DayInfo day={day} timeline={timeline} />\r\n                ))}\r\n                </ContainerDays>\r\n            </>\r\n        )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Timeline;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    left: 60%;\r\n    margin: auto;\r\n    font-family: 'Lucida Sans Unicode','Lucida Grande',sans-serif;\r\n    font-size: 13px;\r\n    color: #757575;\r\n`\r\n\r\nconst ContainerRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-bottom: 20px;\r\n    margin-top: 25px;\r\n\r\n`\r\n\r\nconst TextAreaNoResize = styled.textarea`\r\n    resize: none;\r\n`\r\n\r\nconst Label = styled.label`\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n    margin-right: 5px;\r\n`\r\n\r\nconst Input = styled.input`\r\n    max-width: 70px;\r\n    text-align: center;\r\n    height: 30px;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst NightlyFactor = ({nightlyTime, setTime, calc, result, remove}) => {\r\n    const handleOnChangeValue = ({target: {value, name}}) => {\r\n        if(isNaN(value)) return;\r\n\r\n        setTime(nightlyTime => ({\r\n            ...nightlyTime,\r\n            [name]: value\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Container>\r\n            <ContainerRow>\r\n            <Label> Horas</Label>\r\n            <Input  name='hours' value={nightlyTime?.hours || ''} onChange={handleOnChangeValue}/>\r\n            <Label> Minutos</Label>\r\n            <Input name='minutes' value={nightlyTime?.minutes || ''} onChange={handleOnChangeValue} />\r\n        </ContainerRow>\r\n            <TextAreaNoResize\r\n                 readOnly \r\n                 cols='100'\r\n                 rows='10'\r\n                 value={\r\n                     Object.keys(result).length ? `O resultado da operação é ${result.hours.toString().padStart(2, 0)}:${result.minutes.toString().padStart(2, 0)}` : ''\r\n                 }\r\n            /> \r\n            <ContainerRow>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={calc}>\r\n                    Adicional Noturno\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={remove}>\r\n                    Remover adicional noturno\r\n                </Button>\r\n            </ContainerRow>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NightlyFactor;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { decrease, sum, reset, calcNightlyFactor, removeNightlyFactor} from '../helper/calculator';\r\nimport TimelineParser from '../../components/timelineParser';\r\nimport Nightly from '../../components/Nightly';\r\n\r\n\r\nimport HourCalculator from '../../components/hourCalculator';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\n\r\nconst IndexPage = () => {\r\n  const [value, setValue] = useState(0);\r\n  const [time, setTime] = useState({});\r\n  const [result, setResult] = useState({});\r\n  const [autoSave, setAutoSave] = useState(false);\r\n  const [nightlyTime, setNightlyTime] = useState({});\r\n  const [resultNightly, setResultNightly] = useState({}); \r\n\r\n  const chooseMethod = (operation) => ({\r\n    [operation === 'sum']: sum(time),\r\n    [operation === 'decrease']: decrease(time),\r\n  })[true] || reset(setTime);\r\n\r\n  const doCalc = (operation) => {\r\n    const resultOperation = chooseMethod(operation);\r\n    if(resultOperation && autoSave) {\r\n      setTime(time => ({\r\n        ...time,\r\n        hour1: resultOperation.hours,\r\n        minute1: resultOperation.minutes,\r\n        hour2: '',\r\n        minute2: '',\r\n      }))\r\n    }\r\n    setResult(resultOperation);\r\n  }\r\n\r\n  const calcNightly = () => {\r\n      const nightlyResult = calcNightlyFactor(nightlyTime);\r\n      setResultNightly(nightlyResult);\r\n  }\r\n\r\n  const calcRemoveNightlyFactor = () => {\r\n\t  const resultRemoval = removeNightlyFactor(nightlyTime);\r\n\t  setResultNightly(resultRemoval);\r\n  }\r\n\r\n  const tabChooser = {\r\n    0: <HourCalculator handleTime={setTime} timeState={time} doCalc={doCalc} result={result} setAutoSave={setAutoSave} />,\r\n    1: <Nightly nightlyTime={nightlyTime} setTime={setNightlyTime} result={resultNightly} calc={calcNightly} remove={calcRemoveNightlyFactor}/>,\r\n    4: <TimelineParser />\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"Calculadora\" />\r\n          <Tab label=\"Adicional Noturno\" />\r\n          <Tab label=\"Conversor\" />\r\n          <Tab label=\"Fator Multiplicador\" />\r\n          <Tab label=\"Timeline Parser\" />\r\n        </Tabs>\r\n      </Paper>\r\n      {tabChooser[value]}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IndexPage;\r\n\r\n","import logo from './logo.svg';\r\nimport Calculator from './components/hourCalculator';\r\nimport IndexPage from './pages/calculatorPage/index';\r\n\r\nfunction App() {\r\n  return (\r\n    <IndexPage/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}